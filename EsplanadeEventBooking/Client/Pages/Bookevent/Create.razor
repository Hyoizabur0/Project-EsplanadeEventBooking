@page  "/bookevents/create/"
@inject HttpClient _client
@inject NavigationManager _navManager
<h3 class="card-title">Create New Bookevent</h3>
<hr />
<br />

<EditForm Model="@bookevent" OnValidSubmit="CreateBookevent">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label>Name:</label>
        <div>
            <InputText @bind-Value="@bookevent.Title" class="form-control" />
            <ValidationMessage For="@(() => bookevent.Title)" />
        </div>
        <label>Location:</label>
        <div>
            <InputText @bind-Value="@bookevent.Title" class="form-control" />
            <ValidationMessage For="@(() => bookevent.Title)" />
        </div>
        <label>Start Date:</label>
        <div class="form-group">
            <div>
                <InputDate @bind-Value="bookevent.StartDate" class="form-control">
                </InputDate>
                <ValidationMessage For="@(() => bookevent.StartDate)" />
            </div>
        </div>
        <label>End Date:</label>

    </div>
    <button type="submit" class="btn btn-success btn-block">
        Create Bookevent
    </button>
</EditForm>

@code { Bookevent bookevent = new Bookevent();
            private async Task CreateBookevent()
            {
                await _client.PostAsJsonAsync(Endpoints.BookeventsEndpoint, bookevent);
                _navManager.NavigateTo("/bookevents/");
            } }